func read(n)
  (
{ T }
    assert n > 0;
{ -n + 1 ≤ 0 }
    if flen >= n
      (
{ -flen + n ≤ 0 /\ -n + 1 ≤ 0 }
        flen = flen - n;
        return n
{ 1 ≤ 0 }
      );
{ -n + 1 ≤ 0 /\ flen - n + 1 ≤ 0 }
    if flen <= 0
{ flen ≤ 0 /\ -n + 1 ≤ 0 /\ flen - n + 1 ≤ 0 }
      return -1;
{ flen - n + 1 ≤ 0 /\ -n + 1 ≤ 0 /\ -flen + 1 ≤ 0 }
    n = flen;
{ flen - n ≤ 0 /\ -flen + n ≤ 0 /\ -?2 + flen + 1 ≤ 0 /\ -?2 + 1 ≤ 0 /\ -flen + 1 ≤ 0 }
    flen = 0;
    return n
{ 1 ≤ 0 }
  )

while 0 < 1
  (
{ T }
    n = read(10);
{ T }
    if n <= 0
{ n ≤ 0 }
      break;
{ -n + 1 ≤ 0 }
    weneedrelax = 42;
    (1)
{ -weneedrelax + 42 ≤ 0 /\ weneedrelax - 42 ≤ 0 /\ -n + 1 ≤ 0 }
  )
{ n ≤ 0 }
